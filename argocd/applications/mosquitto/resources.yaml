---
# Source: mosquitto/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: mosquitto
  labels:
    app.kubernetes.io/name: mosquitto
    helm.sh/chart: mosquitto-0.5.0
    app.kubernetes.io/instance: mosquitto
    app.kubernetes.io/version: "1.6.12"
    app.kubernetes.io/managed-by: Helm
---
# Source: mosquitto/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto
  labels:
    app.kubernetes.io/name: mosquitto
    helm.sh/chart: mosquitto-0.5.0
    app.kubernetes.io/instance: mosquitto
    app.kubernetes.io/version: "1.6.12"
    app.kubernetes.io/managed-by: Helm
data:
  mosquitto.conf: |
    autosave_interval 1800 persistence true persistence_location /mosquitto/data/ allow_anonymous false password_file /etc/mosquitto/passwords
---
# Source: mosquitto/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: mosquitto
  labels:
    app.kubernetes.io/name: mosquitto
    helm.sh/chart: mosquitto-0.5.0
    app.kubernetes.io/instance: mosquitto
    app.kubernetes.io/version: "1.6.12"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 1883
      targetPort: default
      protocol: TCP
      name: default
    - port: 9001
      targetPort: websocket
      protocol: TCP
      name: websocket
    - port: 9234
      targetPort: prometheus
      protocol: TCP
      name: prometheus      
  selector:
    app.kubernetes.io/name: mosquitto
    app.kubernetes.io/instance: mosquitto
---
# Source: mosquitto/templates/statefullset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mosquitto
  labels:
    app.kubernetes.io/name: mosquitto
    helm.sh/chart: mosquitto-0.5.0
    app.kubernetes.io/instance: mosquitto
    app.kubernetes.io/version: "1.6.12"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mosquitto
      app.kubernetes.io/instance: mosquitto
  serviceName: mosquitto
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mosquitto
        app.kubernetes.io/instance: mosquitto
    spec:
      serviceAccountName: mosquitto
      securityContext:
        {}
      containers:
        - name: exporter
          image: "nolte/mosquitto-exporter:v0.6.3"
          imagePullPolicy: IfNotPresent
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          args: 
            - --use-splitted-config
          env:
            - name: MQTT_CLIENT_ID
              value: exporter
            - name: BROKER_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          resources:
            limits:
              cpu: 300m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          ports:
            - containerPort: 9234
              name: prometheus
              protocol: TCP      
        - name: mosquitto
          securityContext:
            {}
          image: "eclipse-mosquitto:1.6.12"
          imagePullPolicy: IfNotPresent
          ports:
            - name: default
              containerPort: 1883
              protocol: TCP
            - name: websocket
              containerPort: 9001
              protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 128Mi
          volumeMounts:
            - name: configmap
              mountPath: /mosquitto/config
            - name: data
              mountPath: /mosquitto/data
            - mountPath: /etc/mosquitto
              name: mosquitto_passwords
      volumes:
        - name: configmap
          configMap:
            name: mosquitto
        - name: mosquitto_passwords
          secret:
            secretName: mosquitto
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app.kubernetes.io/name: mosquitto
        app.kubernetes.io/instance: mosquitto
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: "5Gi"
---
# Source: mosquitto/templates/podmonitor.yaml
apiVersion: monitoring.coreos.com/v1
kind: PodMonitor
metadata:
  labels:
    app.kubernetes.io/name: mosquitto
    helm.sh/chart: mosquitto-0.5.0
    app.kubernetes.io/instance: mosquitto
    app.kubernetes.io/version: "1.6.12"
    app.kubernetes.io/managed-by: Helm
  name: mosquitto-prometheus-exporter
spec:
  podMetricsEndpoints:
  - port: prometheus
    path: /metrics
  jobLabel: mosquitto-prometheus-exporter
  namespaceSelector:
    matchNames:
    - default
  selector:
    matchLabels:
      app.kubernetes.io/name: mosquitto
      app.kubernetes.io/instance: mosquitto
